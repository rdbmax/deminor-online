{"version":3,"sources":["constants.js","Cell.js","Game.js","Tools.js","Scores.js","App.js","DataProvider.js","registerServiceWorker.js","index.js"],"names":["COLORS","hiddenCell","cell","mines0","mines1","mines2","mines3","mines4","mines5","mines6","GAME_STATUS","PLAYING","WON","LOST","MINE_QUANTITY","CellStyled","styled","hidden","type","mines","NumberStyled","IconStyled","Cell","onClick","onContextClick","onContextMenu","flag","src","FlagIcon","alt","FlameIcon","Game","props","getNewGameCells","cellQuantity","mineQuantity","emptyList","Array","keys","map","position","cellsWithMines","getMines","closeCells","getCloseCells","Object","values","filter","length","isGameWon","allCells","state","cells","reduce","acc","candidatePosition","Math","floor","random","isTop","isLeft","isBottom","isRight","getLastDigit","x","str","JSON","stringify","findNullCells","nextMines","flattenNextMines","concat","uniqCells","forEach","onClickCell","cellClicked","status","onLose","onWin","cellsToShow","newCells","includes","setState","e","onPutFlag","preventDefault","previousNbTry","nbTry","this","key","Component","ToolsWrapper","ToolSpan","ToolButton","Tools","time","remainingMine","onRestart","Wrapper","Scores","scores","resetScores","index","name","Container","AppWrapper","backgroundColor","App","startTimer","onSecondsChange","stopTimer","setInterval","clearInterval","restart","localStorage","setItem","prompt","newScore","scoresString","getItem","parse","flagAmount","oldScoreString","colors","playing","won","lost","DataContext","Consumer","React","createContext","reducer","action","payload","Error","DataProvider","useReducer","dispatch","Provider","value","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cea9f12a.chunk.js","sourcesContent":["const LIGHT_GREEN = '#33cc33'\nconst GREEN = '#80cc33'\nconst DARK_GREEN = '#cccc33'\nconst ORANGE = '#cc8033'\nconst RED = '#cc3333'\nconst DARK_RED = '#cc3359'\nconst PURPLE = '#cc33a6'\n\nexport const COLORS = {\n  hiddenCell: 'grey',\n  cell: 'white',\n  mines0: LIGHT_GREEN,\n  mines1: GREEN,\n  mines2: DARK_GREEN,\n  mines3: ORANGE,\n  mines4: RED,\n  mines5: DARK_RED,\n  mines6: PURPLE,\n}\n\nexport const GAME_STATUS = {\n  PLAYING: 'playing',\n  WON: 'won',\n  LOST: 'lost',\n}\n\nexport const MINE_QUANTITY = 15\n","import React from 'react'\nimport styled from 'styled-components'\nimport FlagIcon from 'ionicons/dist/ionicons/svg/ios-flag.svg'\nimport FlameIcon from 'ionicons/dist/ionicons/svg/md-flame.svg'\nimport { COLORS } from './constants'\n\nconst CellStyled = styled('div')`\n  position: relative\n  width: 10%\n  height: 10%\n  border: 1px solid black\n  display: inline-block\n  vertical-align: top\n  box-sizing: border-box\n  cursor: pointer\n  background-color: ${({ cell }) => (cell.hidden)\n    ? COLORS.hiddenCell\n    : COLORS.cell}\n  ${({ cell }) => (cell.type !== 'mine' && !cell.hidden)\n    ? `color: ${COLORS[`mines${cell.mines}`]}`\n    : ''}\n`\n\nconst NumberStyled = styled('span')`\n  position: absolute\n  top: 50%\n  left: 50%\n  transform: translate(-50%, -50%)\n`\n\nconst IconStyled = styled('img')`\n  width: 100%\n`\n\nconst Cell = ({ cell, onClick, onContextClick }) => (\n  <CellStyled cell={cell} onClick={onClick} onContextMenu={onContextClick}>\n    {\n      cell.hidden\n        ? (cell.flag\n          ? <IconStyled src={FlagIcon} alt=\"flag\" />\n          : '')\n        : (cell.type === 'mine'\n          ?  <IconStyled src={FlameIcon} alt=\"flame\" />\n          : <NumberStyled>{ cell.mines }</NumberStyled>)\n    }\n  </CellStyled>\n)\n\nexport default Cell\n","import React, { Component } from 'react'\nimport Cell from './Cell'\nimport { GAME_STATUS } from './constants'\n\nclass Game extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { cells: this.getNewGameCells() }\n  }\n\n  componentDidUpdate({ nbTry: previousNbTry }) {\n    if (this.props.nbTry !== previousNbTry)\n      this.setState({ cells: this.getNewGameCells() })\n  }\n\n  getNewGameCells = () => {\n    const { cellQuantity, mineQuantity } = this.props\n\n    const emptyList = [...Array(cellQuantity).keys()].map(position => ({\n      type: '',\n      position,\n      hidden: true,\n      flag: false,\n    }))\n\n    const cellsWithMines = this.getMines(emptyList, mineQuantity)\n\n    return cellsWithMines\n      .map(cell => {\n        if (cell.type === 'mine')\n          return cell\n        else {\n          const position = cell.position\n          const closeCells = this.getCloseCells(cell, cellsWithMines)\n          const mines = Object.values(closeCells).filter(({ type }) => type === 'mine').length\n          return { type: 'clean', position, mines, hidden: true }\n        }\n      })\n  }\n\n  isGameWon = allCells => {\n    const cells = allCells || this.state.cells\n    const isWon = cells.reduce((acc, { type, hidden }) => {\n      if (acc === false)\n        return false\n\n      if ((type === 'mine' && hidden === true) || (type === 'clean' && hidden === false))\n        return true\n\n      return false\n    }, true)\n\n    return isWon\n  }\n\n  getMines = (cells, mines) => {\n    const candidatePosition = Math.floor(Math.random() * cells.length)\n\n    if (cells[candidatePosition].type !== 'mine') {\n      cells[candidatePosition].type = 'mine'\n      return (mines === 1) ? cells : this.getMines(cells, mines -= 1)\n    }\n    else return this.getMines(cells, mines)\n  }\n\n  getCloseCells = (cell, allCells) => {\n    const cells = allCells || this.state.cells\n    const position = cell.position\n    const closeCells = {}\n    const isTop = (position < 10)\n    const isLeft = (position % 10 === 0)\n    const isBottom = (position >= (cells.length - 10))\n    const isRight = (this.getLastDigit(position) === '9')\n\n    if (!isTop)\n      closeCells[position - 10] = cells[position - 10]\n\n    if (!isTop && !isLeft)\n      closeCells[position - 11] = cells[position - 11]\n\n    if (!isLeft)\n      closeCells[position - 1] = cells[position - 1]\n\n    if (!isLeft && !isBottom)\n      closeCells[position + 9] = cells[position + 9]\n\n    if (!isBottom)\n      closeCells[position + 10] = cells[position + 10]\n\n    if (!isBottom && !isRight)\n      closeCells[position + 11] = cells[position + 11]\n\n    if (!isRight)\n      closeCells[position + 1] = cells[position + 1]\n\n    if (!isTop && !isRight)\n      closeCells[position - 9] = cells[position - 9]\n\n    return closeCells\n  }\n\n  getLastDigit = x => {\n    const str = JSON.stringify(x)\n    return str[str.length - 1]\n  }\n\n  findNullCells = cells => {\n    const nextMines = cells\n      .map(cell => [ cell, ...Object.values(this.getCloseCells(cell)) ]\n          .filter(cell => (cell.type === 'clean' && cell.mines === 0))\n      )\n\n    const flattenNextMines = [].concat(...nextMines)\n\n    let uniqCells = {}\n    flattenNextMines.forEach(cell => {\n      uniqCells[cell.position] = cell\n    })\n    uniqCells = Object.values(uniqCells)\n\n    return (cells.length === uniqCells.length)\n      ? uniqCells\n      : this.findNullCells(uniqCells)\n  }\n\n  onClickCell = cellClicked => () => {\n    const { cells } = this.state\n    const { status, onLose, onWin } = this.props\n\n    if (cellClicked.flag || status !== GAME_STATUS.PLAYING)\n      return\n\n    if (cellClicked.type === 'mine')\n      onLose()\n\n    const cellsToShow = (cellClicked.type === 'clean' && cellClicked.mines === 0)\n      ? this.findNullCells([cellClicked]).map(({ position }) => position)\n      : [cellClicked.position]\n\n    const newCells = cells.map(cell => (cellsToShow.includes(cell.position))\n        ? { ...cell, hidden: false }\n        : cell)\n\n    if (this.isGameWon(newCells))\n      onWin()\n\n    this.setState({ cells: newCells })\n  }\n\n  onContextMenu = cellClicked => e => {\n    const { onPutFlag } = this.props\n\n    if (cellClicked.hidden === true) {\n      e.preventDefault()\n\n      const newCells = this.state.cells.map(cell => (cell.position === cellClicked.position)\n          ? { ...cell, flag: !cell.flag }\n          : cell)\n\n      const flagAmount = newCells.filter(({ flag }) => flag).length\n      onPutFlag(flagAmount)\n\n      this.setState({ cells: newCells })\n    }\n  }\n\n  render() {\n    return this.state.cells.map(cell =>\n      <Cell\n        key={cell.position}\n        cell={cell}\n        onClick={this.onClickCell(cell)}\n        onContextClick={this.onContextMenu(cell)}\n      />\n    )\n  }\n}\n\nexport default Game\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ToolsWrapper = styled('div')`\n  position: absolute\n  top: -15px\n  left: 0\n  width: 100%\n  transform: translateY(-100%)\n  color: white\n  padding: 10px 0px\n`\n\nconst ToolSpan = styled('span')`\n  margin-right: 10px\n`\n\nconst ToolButton = styled('button')`\n  margin-right: 10px\n`\n\nconst Tools = ({ time, remainingMine, onRestart }) => (\n  <ToolsWrapper>\n    <ToolButton onClick={onRestart}>restart</ToolButton>\n    <ToolSpan>{ `time : ${time}` }</ToolSpan>\n    <ToolSpan>{ `remaining : ${remainingMine}` }</ToolSpan>\n  </ToolsWrapper>\n)\n\nexport default Tools\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled('div')`\n  position: absolute\n  right: 0\n  color: white\n  transform: translateX(100%)\n  padding-left: 20px\n`\n\nconst Scores = ({ scores, resetScores }) => (\n  <Wrapper>\n    { scores.map(({ name, time }, index) => (\n      <p key={index}>{ `${name}: ${time}` }</p>\n    )) }\n    <button onClick={resetScores}>Reset scores</button>\n  </Wrapper>\n)\n\nexport default Scores\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport Game from './Game'\nimport Tools from './Tools'\nimport Scores from './Scores'\nimport { GAME_STATUS, MINE_QUANTITY } from './constants'\nimport { DataContext } from './DataProvider';\n\nconst Container = styled('div')`\n  width: 400px\n  height: 400px\n  position: absolute\n  left: 50%\n  top: 50%\n  transform: translate(-50%, -50%)\n  background-color: #949494\n`\n\nconst AppWrapper = styled('div')`\n  position: relative\n  width: 100vw\n  height: 100vh\n  background-color: ${({ backgroundColor }) => backgroundColor}\n`\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    const oldScoreString = localStorage.getItem('scores') || '[]'\n    let scores\n\n    try {\n      scores = JSON.parse(oldScoreString)\n    } catch (e) {\n      scores = []\n    }\n\n    localStorage.setItem('scores', JSON.stringify(scores))\n\n    this.colors = {\n      playing: 'black',\n      won: 'green',\n      lost: 'red',\n    }\n\n    this.state = {\n      status: GAME_STATUS.PLAYING,\n      time: 0,\n      nbTry: 0,\n      remainingMine: MINE_QUANTITY,\n      scores,\n    }\n    this.startTimer()\n  }\n\n  componentWillUnmount() {\n    this.stopTimer()\n  }\n\n  startTimer = () => {\n    if (this.onSecondsChange)\n      this.stopTimer()\n\n    this.onSecondsChange = setInterval(() => {\n      this.setState({ time: this.state.time + 1 })\n    }, 1000)\n  }\n\n  stopTimer = () => {\n    clearInterval(this.onSecondsChange)\n  }\n\n  restart = () => {\n    this.setState({\n      time: 0,\n      status: GAME_STATUS.PLAYING,\n      remainingMine: MINE_QUANTITY,\n      nbTry: this.state.nbTry + 1,\n    })\n    this.startTimer()\n  }\n\n  resetScores = () => {\n    this.setState({ scores: [] })\n    localStorage.setItem('scores', '[]')\n  }\n\n  onWin = () => {\n    this.stopTimer()\n    this.setState({ status: GAME_STATUS.WON })\n\n    const name = prompt('Please enter your name to save your score or cancel')\n    if (name) {\n      const { time } = this.state\n      const newScore = { name, time }\n      const scoresString = localStorage.getItem('scores')\n      const scores = scoresString ? [newScore, ...JSON.parse(scoresString)] : [newScore]\n      this.setState({ scores })\n      localStorage.setItem('scores', JSON.stringify(scores))\n    }\n  }\n\n  onLose = () => {\n    this.stopTimer()\n    this.setState({ status: GAME_STATUS.LOST })\n  }\n\n  onPutFlag = flagAmount => {\n    const remainingMine = MINE_QUANTITY - flagAmount\n    this.setState({ remainingMine })\n  }\n\n  render() {\n    const { time, status, nbTry, scores, remainingMine } = this.state\n\n    return (\n      <AppWrapper backgroundColor={this.colors[status]}>\n        <Container>\n          <Tools time={time} remainingMine={remainingMine} onRestart={this.restart} />\n          <Scores scores={scores} resetScores={this.resetScores} />\n\n          <DataContext.Consumer>\n            { ([state]) => (\n              <Game\n                status={state.status}\n                nbTry={nbTry}\n                cellQuantity={100}\n                mineQuantity={MINE_QUANTITY}\n                onLose={this.onLose}\n                onWin={this.onWin}\n                onPutFlag={this.onPutFlag}\n              />\n            ) }\n          </DataContext.Consumer>\n        </Container>\n      </AppWrapper>\n    )\n  }\n}\n\nexport default App\n","import React, { useReducer } from 'react';\nimport App from './App';\nimport { GAME_STATUS } from './constants'\n\nexport const DataContext = React.createContext(null);\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE_GAME_STATUS':\n      return { ...state, status: action.payload };\n\n    default:\n      throw new Error();\n  }\n}\n\nconst DataProvider = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    status: GAME_STATUS.PLAYING,\n  });\n\n  return (\n    <DataContext.Provider value={[state, dispatch]}>\n      <App />\n    </DataContext.Provider>\n  );\n};\n\nexport default DataProvider;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available please refresh.\" message in your web app.\n              console.log('New content is available please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport DataProvider from './DataProvider'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<DataProvider />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}