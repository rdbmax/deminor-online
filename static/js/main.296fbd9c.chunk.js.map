{"version":3,"sources":["constants.js","Cell.js","Game.js","Tools.js","Scores.js","App.js","registerServiceWorker.js","index.js"],"names":["COLORS","hiddenCell","cell","mines0","mines1","mines2","mines3","mines4","mines5","mines6","GAME_STATUS","PLAYING","WON","LOST","MINE_QUANTITY","CellStyled","styled","_templateObject","_ref","hidden","_ref2","type","concat","mines","NumberStyled","_templateObject2","IconStyled","_templateObject3","Cell","_ref3","onClick","onContextClick","children","react_default","a","createElement","onContextMenu","flag","src","FlagIcon","alt","FlameIcon","Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getNewGameCells","_this$props","cellQuantity","mineQuantity","emptyList","toConsumableArray","Array","keys","map","position","cellsWithMines","getMines","closeCells","getCloseCells","values","filter","length","isGameWon","allCells","state","cells","reduce","acc","candidatePosition","Math","floor","random","isTop","isLeft","isBottom","isRight","getLastDigit","x","str","JSON","stringify","findNullCells","nextMines","flattenNextMines","apply","uniqCells","forEach","onClickCell","cellClicked","_this$props2","status","onLose","onWin","cellsToShow","_ref4","newCells","includes","objectSpread","setState","e","onPutFlag","preventDefault","_ref5","previousNbTry","_ref6","nbTry","_this2","src_Cell","key","Component","ToolsWrapper","Tools_templateObject","ToolSpan","Tools_templateObject2","ToolButton","Tools_templateObject3","Tools","time","remainingMine","onRestart","Wrapper","Scores_templateObject","Scores","scores","resetScores","index","name","Container","App_templateObject","AppWrapper","App_templateObject2","backgroundColor","App","startTimer","onSecondsChange","stopTimer","setInterval","clearInterval","restart","localStorage","setItem","prompt","newScore","scoresString","getItem","parse","flagAmount","oldScoreString","colors","playing","won","lost","_this$state","src_Tools","src_Scores","src_Game","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.296fbd9c.chunk.js","sourcesContent":["const LIGHT_GREEN = '#33cc33'\nconst GREEN = '#80cc33'\nconst DARK_GREEN = '#cccc33'\nconst ORANGE = '#cc8033'\nconst RED = '#cc3333'\nconst DARK_RED = '#cc3359'\nconst PURPLE = '#cc33a6'\n\nexport const COLORS = {\n  hiddenCell: 'grey',\n  cell: 'white',\n  mines0: LIGHT_GREEN,\n  mines1: GREEN,\n  mines2: DARK_GREEN,\n  mines3: ORANGE,\n  mines4: RED,\n  mines5: DARK_RED,\n  mines6: PURPLE,\n}\n\nexport const GAME_STATUS = {\n  PLAYING: 'playing',\n  WON: 'won',\n  LOST: 'lost',\n}\n\nexport const MINE_QUANTITY = 15\n","import React from 'react'\nimport styled from 'styled-components'\nimport FlagIcon from 'ionicons/dist/ionicons/svg/ios-flag.svg'\nimport FlameIcon from 'ionicons/dist/ionicons/svg/md-flame.svg'\nimport { COLORS } from './constants'\n\nconst CellStyled = styled('div')`\n  position: relative\n  width: 10%\n  height: 10%\n  border: 1px solid black\n  display: inline-block\n  vertical-align: top\n  box-sizing: border-box\n  cursor: pointer\n  background-color: ${({ cell }) => (cell.hidden)\n    ? COLORS.hiddenCell\n    : COLORS.cell}\n  ${({ cell }) => (cell.type !== 'mine' && !cell.hidden)\n    ? `color: ${COLORS[`mines${cell.mines}`]}`\n    : ''}\n`\n\nconst NumberStyled = styled('span')`\n  position: absolute\n  top: 50%\n  left: 50%\n  transform: translate(-50%, -50%)\n`\n\nconst IconStyled = styled('img')`\n  width: 100%\n`\n\nconst Cell = ({ cell, onClick, children, onContextClick }) => (\n  <CellStyled cell={cell} onClick={onClick} onContextMenu={onContextClick}>\n    {\n      cell.hidden\n        ? (cell.flag\n          ? <IconStyled src={FlagIcon} alt=\"flag\" />\n          : '')\n        : (cell.type === 'mine'\n          ?  <IconStyled src={FlameIcon} alt=\"flame\" />\n          : <NumberStyled>{ cell.mines }</NumberStyled>)\n    }\n  </CellStyled>\n)\n\nexport default Cell\n","import React, { Component } from 'react'\nimport Cell from './Cell'\nimport { GAME_STATUS } from './constants'\n\nclass Game extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { cells: this.getNewGameCells() }\n  }\n\n  componentDidUpdate({ nbTry: previousNbTry }) {\n    if (this.props.nbTry !== previousNbTry)\n      this.setState({ cells: this.getNewGameCells() })\n  }\n\n  getNewGameCells = () => {\n    const { cellQuantity, mineQuantity } = this.props\n\n    const emptyList = [...Array(cellQuantity).keys()].map(position => ({\n      type: '',\n      position,\n      hidden: true,\n      flag: false,\n    }))\n\n    const cellsWithMines = this.getMines(emptyList, mineQuantity)\n\n    return cellsWithMines\n      .map(cell => {\n        if (cell.type === 'mine')\n          return cell\n        else {\n          const position = cell.position\n          const closeCells = this.getCloseCells(cell, cellsWithMines)\n          const mines = Object.values(closeCells).filter(({ type }) => type === 'mine').length\n          return { type: 'clean', position, mines, hidden: true }\n        }\n      })\n  }\n\n  isGameWon = allCells => {\n    const cells = allCells || this.state.cells\n    const isWon = cells.reduce((acc, { type, hidden }) => {\n      if (acc === false)\n        return false\n\n      if ((type === 'mine' && hidden === true) || (type === 'clean' && hidden === false))\n        return true\n\n      return false\n    }, true)\n\n    return isWon\n  }\n\n  getMines = (cells, mines) => {\n    const candidatePosition = Math.floor(Math.random() * cells.length)\n\n    if (cells[candidatePosition].type !== 'mine') {\n      cells[candidatePosition].type = 'mine'\n      return (mines === 1) ? cells : this.getMines(cells, mines -= 1)\n    }\n    else return this.getMines(cells, mines)\n  }\n\n  getCloseCells = (cell, allCells) => {\n    const cells = allCells || this.state.cells\n    const position = cell.position\n    const closeCells = {}\n    const isTop = (position < 10)\n    const isLeft = (position % 10 === 0)\n    const isBottom = (position >= (cells.length - 10))\n    const isRight = (this.getLastDigit(position) === '9')\n\n    if (!isTop)\n      closeCells[position - 10] = cells[position - 10]\n\n    if (!isTop && !isLeft)\n      closeCells[position - 11] = cells[position - 11]\n\n    if (!isLeft)\n      closeCells[position - 1] = cells[position - 1]\n\n    if (!isLeft && !isBottom)\n      closeCells[position + 9] = cells[position + 9]\n\n    if (!isBottom)\n      closeCells[position + 10] = cells[position + 10]\n\n    if (!isBottom && !isRight)\n      closeCells[position + 11] = cells[position + 11]\n\n    if (!isRight)\n      closeCells[position + 1] = cells[position + 1]\n\n    if (!isTop && !isRight)\n      closeCells[position - 9] = cells[position - 9]\n\n    return closeCells\n  }\n\n  getLastDigit = x => {\n    const str = JSON.stringify(x)\n    return str[str.length - 1]\n  }\n\n  findNullCells = cells => {\n    const nextMines = cells\n      .map(cell => [ cell, ...Object.values(this.getCloseCells(cell)) ]\n          .filter(cell => (cell.type === 'clean' && cell.mines === 0))\n      )\n\n    const flattenNextMines = [].concat(...nextMines)\n\n    let uniqCells = {}\n    flattenNextMines.forEach(cell => {\n      uniqCells[cell.position] = cell\n    })\n    uniqCells = Object.values(uniqCells)\n\n    return (cells.length === uniqCells.length)\n      ? uniqCells\n      : this.findNullCells(uniqCells)\n  }\n\n  onClickCell = cellClicked => () => {\n    const { cells } = this.state\n    const { status, onLose, onWin } = this.props\n\n    if (cellClicked.flag || status !== GAME_STATUS.PLAYING)\n      return\n\n    if (cellClicked.type === 'mine')\n      onLose()\n\n    const cellsToShow = (cellClicked.type === 'clean' && cellClicked.mines === 0)\n      ? this.findNullCells([cellClicked]).map(({ position }) => position)\n      : [cellClicked.position]\n\n    const newCells = cells.map(cell => (cellsToShow.includes(cell.position))\n        ? { ...cell, hidden: false }\n        : cell)\n\n    if (this.isGameWon(newCells))\n      onWin()\n\n    this.setState({ cells: newCells })\n  }\n\n  onContextMenu = cellClicked => e => {\n    const { onPutFlag } = this.props\n\n    if (cellClicked.hidden === true) {\n      e.preventDefault()\n\n      const newCells = this.state.cells.map(cell => (cell.position === cellClicked.position)\n          ? { ...cell, flag: !cell.flag }\n          : cell)\n\n      const flagAmount = newCells.filter(({ flag }) => flag).length\n      onPutFlag(flagAmount)\n\n      this.setState({ cells: newCells })\n    }\n  }\n\n  render() {\n    return this.state.cells.map(cell =>\n      <Cell\n        key={cell.position}\n        cell={cell}\n        onClick={this.onClickCell(cell)}\n        onContextClick={this.onContextMenu(cell)}\n      />\n    )\n  }\n}\n\nexport default Game\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ToolsWrapper = styled('div')`\n  position: absolute\n  top: -15px\n  left: 0\n  width: 100%\n  transform: translateY(-100%)\n  color: white\n  padding: 10px 0px\n`\n\nconst ToolSpan = styled('span')`\n  margin-right: 10px\n`\n\nconst ToolButton = styled('button')`\n  margin-right: 10px\n`\n\nconst Tools = ({ time, status, remainingMine, onRestart }) => (\n  <ToolsWrapper>\n    <ToolButton onClick={onRestart}>restart</ToolButton>\n    <ToolSpan>{ `time : ${time}` }</ToolSpan>\n    <ToolSpan>{ `remaining : ${remainingMine}` }</ToolSpan>\n  </ToolsWrapper>\n)\n\nexport default Tools\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled('div')`\n  position: absolute\n  right: 0\n  color: white\n  transform: translateX(100%)\n  padding-left: 20px\n`\n\nconst Scores = ({ scores, resetScores }) => (\n  <Wrapper>\n    { scores.map(({ name, time }, index) => (\n      <p key={index}>{ `${name}: ${time}` }</p>\n    )) }\n    <button onClick={resetScores}>Reset scores</button>\n  </Wrapper>\n)\n\nexport default Scores\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport Game from './Game'\nimport Tools from './Tools'\nimport Scores from './Scores'\nimport { GAME_STATUS, MINE_QUANTITY } from './constants'\n\nconst Container = styled('div')`\n  width: 400px\n  height: 400px\n  position: absolute\n  left: 50%\n  top: 50%\n  transform: translate(-50%, -50%)\n  background-color: #949494\n`\n\nconst AppWrapper = styled('div')`\n  position: relative\n  width: 100vw\n  height: 100vh\n  background-color: ${({ backgroundColor }) => backgroundColor}\n`\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    const oldScoreString = localStorage.getItem('scores') || '[]'\n    let scores\n\n    try {\n      scores = JSON.parse(oldScoreString)\n    } catch (e) {\n      scores = []\n    }\n\n    localStorage.setItem('scores', JSON.stringify(scores))\n\n    this.colors = {\n      playing: 'black',\n      won: 'green',\n      lost: 'red',\n    }\n\n    this.state = {\n      status: GAME_STATUS.PLAYING,\n      time: 0,\n      nbTry: 0,\n      remainingMine: MINE_QUANTITY,\n      scores,\n    }\n    this.startTimer()\n  }\n\n  componentWillUnMount() {\n    this.stopTimer()\n  }\n\n  startTimer = () => {\n    if (this.onSecondsChange)\n      this.stopTimer()\n\n    this.onSecondsChange = setInterval(() => {\n      this.setState({ time: this.state.time + 1 })\n    }, 1000)\n  }\n\n  stopTimer = () => {\n    clearInterval(this.onSecondsChange)\n  }\n\n  restart = () => {\n    this.setState({\n      time: 0,\n      status: GAME_STATUS.PLAYING,\n      remainingMine: MINE_QUANTITY,\n      nbTry: this.state.nbTry + 1,\n    })\n    this.startTimer()\n  }\n\n  resetScores = () => {\n    this.setState({ scores: [] })\n    localStorage.setItem('scores', '[]')\n  }\n\n  onWin = () => {\n    this.stopTimer()\n    this.setState({ status: GAME_STATUS.WON })\n\n    const name = prompt('Please enter your name to save your score or cancel')\n    if (name) {\n      const { time } = this.state\n      const newScore = { name, time }\n      const scoresString = localStorage.getItem('scores')\n      const scores = scoresString ? [newScore, ...JSON.parse(scoresString)] : [newScore]\n      this.setState({ scores })\n      localStorage.setItem('scores', JSON.stringify(scores))\n    }\n  }\n\n  onLose = () => {\n    this.stopTimer()\n    this.setState({ status: GAME_STATUS.LOST })\n  }\n\n  onPutFlag = flagAmount => {\n    const remainingMine = MINE_QUANTITY - flagAmount\n    this.setState({ remainingMine })\n  }\n\n  render() {\n    const { time, status, nbTry, scores, remainingMine } = this.state\n\n    return (\n      <AppWrapper backgroundColor={this.colors[status]}>\n        <Container>\n          <Tools time={time} status={status} remainingMine={remainingMine} onRestart={this.restart} />\n          <Scores scores={scores} resetScores={this.resetScores} />\n\n          <Game\n            status={status}\n            nbTry={nbTry}\n            cellQuantity={100}\n            mineQuantity={MINE_QUANTITY}\n            onLose={this.onLose}\n            onWin={this.onWin}\n            onPutFlag={this.onPutFlag}\n          />\n        </Container>\n      </AppWrapper>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available please refresh.\" message in your web app.\n              console.log('New content is available please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}